(()=>{"use strict";var __webpack_modules__={300:(module,exports)=>{eval("\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports[\"default\"] = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;\n\n//# sourceURL=webpack://keyboard/./node_modules/node-fetch/browser.js?")},485:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n;// CONCATENATED MODULE: ./src/components/keyboard/key.js\nclass Key{\n    constructor(width, value){\n        this.width = width ?  width : "30px";\n        this.height = "31px";\n        this.value = value;\n    }\n    build(){\n        let key = document.createElement("div");\n        key.classList.add("key");\n        key.style.width = this.width;\n        key.style.height = this.height\n        key.innerText = this.value;\n        return key\n    }\n}\n// EXTERNAL MODULE: ./node_modules/node-fetch/browser.js\nvar browser = __webpack_require__(300);\nvar browser_default = /*#__PURE__*/__webpack_require__.n(browser);\n;// CONCATENATED MODULE: ./src/components/keyboard/keyMap.js\n\n\nasync function keySetMain(){\n    const url = "https://opensheet.elk.sh/10DId3PsrfSAyKLMCOT60f-7nNOBnH1GV-gzfZbM3xGg/main"\n    const response = await browser_default()(url);\n    const Map = await response.json();\n    const keyMap = {}\n    Map.forEach(element => {\n        keyMap[element.Code] = element\n    });\n    keyMap.Equal.Key ="="\n    return keyMap\n}\nasync function keySetArrow(){\n    const url = "https://opensheet.elk.sh/10DId3PsrfSAyKLMCOT60f-7nNOBnH1GV-gzfZbM3xGg/arrow"\n    const response = await browser_default()(url);\n    const Map = await response.json();\n    const keyMap = {}\n    Map.forEach(element => {\n        keyMap[element.Code] = element\n    });\n    return keyMap\n}\n\n\n    \n//, keySetArrow\n;// CONCATENATED MODULE: ./src/components/keyboard/renderKeyboard.js\n\n\n\nconst keyContainer = document.createElement("div")\nkeyContainer.classList.add("keyboard-container")\n\nasync function renderKeyboard(value){\n    // draw all basic buttons \n    const buttonSetMain = await renderButtons(keySetMain,value)\n\n    // make round border for 4  end elements\n    makeEndsRound(buttonSetMain)\n\n    // append buttons to conteiner\n    appendButtons(buttonSetMain,keyContainer)\n    \n    \n    // draw arrow buttons \n    const buttonSetArrow = await renderButtons(keySetArrow,value)\n\n    // transform arrow buttons to fit the its container\n    fitArrowButtons(buttonSetArrow)\n\n    // create grid container for Arrow block buttons\n    const arrowBlockContainer = await addArrowContainer()\n\n    //append arrow buttons in container\n    appendButtons(buttonSetArrow,arrowBlockContainer)\n    \n\n    return keyContainer\n}\nasync function renderButtons(keySet,value = "Key"){\n    const Map = await keySet()\n    for (let el in Map){\n        console.log(value)\n        let button = new Key(Map[el].Width,Map[el][value]).build()\n        button.id = Map[el].Code\n        button.dataset.Value = Map[el].Value\n        Map[el]=button\n    }\n    return Map\n}\nconst makeEndsRound = (buttonSet) => {\n    buttonSet["Escape"].style.borderTopLeftRadius = "16px"\n    buttonSet["sleep"].style.borderTopRightRadius = "16px"\n    buttonSet["fn"].style.borderBottomLeftRadius = "16px"\n}\nconst addArrowContainer = () => {\n    const arrowBlockContainer = document.createElement("div")\n    arrowBlockContainer.classList.add("arrow-block")\n    keyContainer.append(arrowBlockContainer)\n    return arrowBlockContainer\n}\nasync function appendButtons(Map,container){\n    for (let el in Map){\n    container.append(Map[el])\n    }\n}\nconst fitArrowButtons = (buttonSet) => {\n    buttonSet["ArrowRight"].style.borderBottomRightRadius = "16px"\n    buttonSet["ArrowUp"].style.height = "13px"\n    buttonSet["ArrowDown"].style.height = "13px"\n    buttonSet["ArrowLeft"].style.gridArea = "1/1/3/2"\n    buttonSet["ArrowRight"].style.gridArea = "1/3/3/4"\n    buttonSet["ArrowUp"].style.gridArea =  "1/2/2/3"\n    buttonSet["ArrowUp"].classList.add("up-down-buttons")\n    buttonSet["ArrowDown"].style.gridArea = "2/2/3/4"\n    buttonSet["ArrowDown"].classList.add("up-down-buttons")\n}\n\n\n;// CONCATENATED MODULE: ./src/components/index.js\n\n\n// document wrapper\nconst windowContainer = document.createElement("div")\nwindowContainer.classList.add("window-wrapper")\n\n// Title\nconst title = document.createElement("h1")\ntitle.textContent = "RSS Виртуальная клавиатура"\n// create input\n// const input = document.createElement("input")\n// // input.classList.add("input")\n// input.id = "input"\n\n// input textarea\nconst components_textarea = document.createElement("textarea")\ncomponents_textarea.classList.add("input")\ncomponents_textarea.id = "textarea"\n// textarea.rows=10;\n\n// keyboard contaner\nconst keyboardContainer = document.createElement("div")\n\n\n// join blocks on page\nwindowContainer.append(title)\nwindowContainer.append(components_textarea)\nwindowContainer.append(keyboardContainer)\naddKeyboard("Key")\n\nasync function addKeyboard(mode){\n    const keyboard = await renderKeyboard(mode)\n    keyboardContainer.append(keyboard)\n}\n\nfunction Components() {\n    this.windowContainer = windowContainer \n    this.windowContainer.textarea = components_textarea\n}\nconst components = new Components()\n\n;// CONCATENATED MODULE: ./src/events/mouseEvents.js\n\n\n// add mouse click event\nconst clickEvents = function (){\n    document.addEventListener("mousedown",(e)=>mouseEvents_select(e))\n    document.addEventListener("mousedown",(e)=>tapSymbol(e))\n    document.addEventListener("pointerdown",(e)=>transitionEffect(e))\n    document.addEventListener("pointerup",(e)=>canselTransition(e))\n}\nconst mouseEvents_select = function(e){\n    if(e.target.className.includes("key")&& !e.target.className.includes("keyboard-container")){\n        document.addEventListener("mousedown",(e)=>e.preventDefault())\n    }\n    if(e.target.className.includes("input")){\n        document.getElementById("textarea").focus()\n    }\n}\nconst  tapSymbol = function(e){\n    console.log(e.target.id)\n    if(e.target.className.includes("key")&& !e.target.className.includes("keyboard-container")){\n        let actualText = components.windowContainer.textarea.value\n        components.windowContainer.textarea.value = actualText+e.target.dataset.Value\n    }\n}\nconst transitionEffect = function(e){\n    if(e.target.className.includes("key")&& !e.target.className.includes("keyboard-container")){\n        e.target.classList.add("button-down")\n    }\n}\nconst canselTransition = function(e){\n    if(e.target.className.includes("key")&& !e.target.className.includes("keyboard-container")){\n        e.target.classList.remove("button-down")\n    }\n}\nfunction evaluateMouseEvents(){\n    clickEvents()\n}\n\n\n;// CONCATENATED MODULE: ./src/events/keyboardEvents.js\n\n\nlet click = new Event("mousedown")\nconst events = function(){\n    document.addEventListener("keydown",(e)=>e.preventDefault())\n    document.addEventListener("keydown",(e)=>keyPress(e))\n    document.addEventListener("keyup",(e)=>keyUnpressed(e))\n\n}\n\nconst keyPress =async function(e){\n    console.log(e.code)\n    let element = document.getElementById(e.code)\n    element.classList.add("key-down")\n    element.classList.add("button-down")\n    let actualText = components.windowContainer.textarea.value\n    components.windowContainer.textarea.value = actualText+element.dataset.Value\n    \n}\n\nconst keyUnpressed = function(e){\n    try{\n        let element = document.getElementById(e.code)\n        element.classList.remove("key-down")\n        element.classList.remove("button-down")\n\n    }catch(error){console.log(error)}\n}\n\n\n\n\n\n\n\nfunction evaluateKeyboardEvents(){\n    events()\n}\n\n\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n//generate web app\nfunction app(){\n    const body = document.body\n    body.append(components.windowContainer)\n    evaluateMouseEvents()\n    evaluateKeyboardEvents()\n}\napp()\n\n//# sourceURL=webpack://keyboard/./src/index.js_+_6_modules?')}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n);var __webpack_exports__=__webpack_require__(485)})();